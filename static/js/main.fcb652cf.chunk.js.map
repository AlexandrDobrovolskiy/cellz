{"version":3,"sources":["Input.js","plus.svg","PlusButton.js","Markup.js","copy.svg","CopyButton.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","StyledInput","input","Input","selected","onSelect","props","onClick","PlusButton","src","plus","alt","Row","Markup","markup","onChange","handleNameChange","index","event","name","target","value","m","map","r","i","handleValueChange","style","marginBottom","width","textAlign","copy","markupRows","rows","o","Table","useState","setRows","useEffect","handleSelect","calcResult","reduce","acc","parseFloat","display","className","CopyButton","position","right","bottom","textRows","Array","from","length","join","textTable","item","clipboard","Blob","type","App","setMarkup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcb652cf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Input = ({ selected, onSelect, ...props }) => {\n\n  const handleSelect = () => {\n    onSelect && onSelect(!selected);\n  };\n\n  return (\n    <Container onClick={handleSelect} selected={selected}>\n      <StyledInput {...props} />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n`;\n\nconst StyledInput = styled.input`\n  border-radius: 10px;\n  padding: 4px 10px;\n  border-width: 1px;\n  border-color: black;\n  outline: none;\n`;\n\n export default Input;\n","export default __webpack_public_path__ + \"static/media/plus.0693ab3c.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport plus from './plus.svg';\n\nconst PlusButton = ({ ...props }) => {\n    return (\n      <Container {...props}>\n        <img src={plus} alt=\"plus\" />\n      </Container>\n    );\n};\n\nconst Container = styled.div`\n  width: 40px;\n  height: 40px;\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport default PlusButton;\n","import React, { useState } from'react';\nimport styled from 'styled-components';\nimport Input from './Input';\nimport PlusButton from './PlusButton';\n\nconst Markup = ({ markup, onChange }) => {\n  const handleAddRow = () => {\n    onChange(m => [\n      ...m,\n      { name: '', value: ''}\n    ]);\n  }\n\n  const handleNameChange = (index) => (event) => {\n    const { value: name } = event.target;\n\n    onChange(m => m.map((r, i) => {\n      if (i === index) {\n        return { ...r, name };\n      }\n\n      return r;\n    }))\n  };\n\n  const handleValueChange = (index) => ({ target }) => {\n    const { value } = target;\n\n    onChange(m => m.map((r, i) => {\n      if (i === index) {\n        return { ...r, value };\n      }\n\n      return r;\n    }));\n  };\n\n  return (\n    <Container>\n      <Row style={{ marginBottom: '10px' }}>\n        <div style={{ width: '100%', textAlign: 'left' }}>\n          Name\n        </div>\n        <div style={{ width: '100%', textAlign: 'left' }}>\n          Value\n        </div>\n      </Row>\n      {markup.map(({ name, value }, index) => (\n        <Row>\n          <Input onChange={handleNameChange(index)} value={name} />\n          <Input onChange={handleValueChange(index)} value={value} />\n        </Row>\n      ))}\n      <PlusButton onClick={handleAddRow}>+</PlusButton>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n  border-radius: 12px;\n  width: 30vw;\n  margin: 40px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin: 6px;\n  width: 100%;\n`;\n\nexport default Markup;\n","export default __webpack_public_path__ + \"static/media/copy.ba2786b3.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport copy from './copy.svg';\n\nconst PlusButton = ({ ...props }) => {\n  return (\n    <Container {...props}>\n      <img src={copy} alt=\"plus\" />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 40px;\n  height: 40px;\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport default PlusButton;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as clipboard from 'clipboard-polyfill';\nimport Input from './Input';\nimport PlusButton from './PlusButton';\nimport CopyButton from './CopyButton';\n\nconst markupRows = (markup, rows) => {\n  return rows.map(({ name, markup: m, ...o }) => {\n    return {\n      name,\n      markup: markup.map((r, i) => ({ ...m[i], ...r })),\n      ...o\n    }\n  });\n};\n\nconst Table = ({ markup }) => {\n  const [rows, setRows] = useState(markupRows(markup,[]));\n\n  useEffect(() => {\n    setRows(markupRows(markup, rows));\n  }, [markup]);\n\n  const handleAddRow = () => {\n    setRows(r => markupRows(markup, [...r, { name: '', markup: [] }]));\n  }\n\n  const handleNameChange = (index) => (event) => {\n    setRows(r => r.map((r, i) => {\n     if (i === index) {\n       return { ...r, name: event.target.value };\n     }\n\n     return r;\n    }));\n  };\n\n  const handleSelect = (index, name) => () => {\n    setRows(r => r.map((r, i) => {\n      if (i === index) {\n        return { ...r, markup: r.markup.map((m) => {\n            if (m.name === name) {\n              return { ...m, selected: !m.selected };\n            }\n\n            return m;\n          })\n        };\n      }\n\n      return r;\n    }));\n  };\n\n  const calcResult = (m) => {\n    return m.reduce((acc, { value, selected }) => selected ? acc + parseFloat(value) : acc, 0);\n  };\n\n  const handleCopy = () => {\n    const textRows = rows.reduce((acc, { name, markup }) => `\n    ${acc}<tr><td>${name}</td>${markup.reduce((acc, m) => m.selected ? `${acc}<td style=\"background-color:lightgreen\">${m.name}</td>` : `${acc}<td>${m.name}</td>`, '')}<td>${calcResult(markup)}<td>\n    `, `<tr><td><b>Feature</b></td>${Array.from({ length: markup.length }, () => '<td></td>').join('')}<td><b>Result</b></td></tr>`);\n    const textTable = `<table>${textRows}</table>`\n\n    const item = new clipboard.ClipboardItem({\n      \"text/html\": new Blob(\n        [textTable],\n        { type: \"text/html\" }\n      ),\n      \"text/plain\": \"Paste it to google sheets or exel\"\n    });\n    clipboard.write([item]);\n  };\n\n  return (\n    <Container>\n      <Row>\n        <div style={{ display: 'flex' }}>\n          <div>Feature</div>\n        </div>\n        <div>Result</div>\n      </Row>\n      {rows.map(({ name, markup }, index) => (\n        <Row>\n          <div style={{ display: 'flex' }}>\n            <Input value={name} onChange={handleNameChange(index)}/>\n            {markup.map((m, i) => <Markup key={i} onClick={handleSelect(index, m.name)} selected={m.selected}>{m.name}</Markup>)}\n          </div>\n          <div>{calcResult(markup)}</div>\n        </Row>\n      ))}\n      <div className=\"btn\"></div>\n      <PlusButton onClick={handleAddRow} />\n      <CopyButton style={{ position: 'absolute', right: 10, bottom: 10}} onClick={handleCopy} />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n  border-radius: 12px;\n  padding: 20px 40px;\n  margin: 40px;\n  align-items: center;\n  position: relative;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  margin: 10px 0;\n`;\n\nconst Markup = styled.div`\n  cursor: pointer;\n  padding: 4px 16px;\n  margin: 0 4px;\n  border-radius: 4px;\n  ${({ selected }) => selected ? 'background-color: lightgreen;' : ''}\n`;\n\nexport default Table;\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport Markup from './Markup';\nimport Table from './Table';\n\nfunction App() {\n  const [markup, setMarkup] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <Markup markup={markup} onChange={setMarkup} />\n      <Table markup={markup} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}